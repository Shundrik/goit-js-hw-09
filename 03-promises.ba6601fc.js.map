{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAE/B,OADAC,QAAQC,IAAI,SACL,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,YAEpBA,OArCM,CACXU,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,YAIzBF,KAAKI,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAMF,IALA,IAAIC,GAASF,EAAEG,cAAclB,MAAMmB,MAC/BC,GAAQL,EAAEG,cAAcE,KAAKD,MAC7BE,GAAUN,EAAEG,cAAcG,OAAOF,MAG5BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAGhCxB,EAAcwB,EAFhBL,GAASG,GAGNG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAGTyB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UACrE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAEpByB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button'),\n};\n\n// refs.form.addEventListener('input', valueFromForm);\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  let delay = +e.currentTarget.delay.value;\n  let step = +e.currentTarget.step.value;\n  let amount = +e.currentTarget.amount.value;\n\n\n  for (let i = 1; i <= amount; i += 1) {\n  delay += step;\n    // let position = i\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n              // console.log(`start ${position} and ${delay}`);\n              // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n              Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            }).catch(({ position, delay }) => {\n              // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n              Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n  }\n});\nfunction createPromise(position, delay) {\n  console.log(\"ddddd\");\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","btn","addEventListener","e","preventDefault","delay1","currentTarget","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ba6601fc.js.map"}