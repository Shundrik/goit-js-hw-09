{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAG/B,OAFAC,QAAQC,IAAIF,GAEL,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCP,QAAQC,IAAIF,GACZS,YAAW,WACLH,EACFF,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,YAEpBA,OA1CM,CACXU,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,YAIzBF,KAAKI,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAKF,IAJA,IAAIC,GAASF,EAAEG,cAAclB,MAAMmB,MAC/BC,GAAQL,EAAEG,cAAcE,KAAKD,MAC7BE,GAAUN,EAAEG,cAAcG,OAAOF,MAE5BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCxB,EAAcwB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAGjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAGjD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAElByB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAGjDiB,GAASG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button'),\n};\n\n// refs.form.addEventListener('input', valueFromForm);\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  let delay = +e.currentTarget.delay.value;\n  let step = +e.currentTarget.step.value;\n  let amount = +e.currentTarget.amount.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        // console.log(`start ${position} and ${delay}`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n});\nfunction createPromise(position, delay) {\n  console.log(delay);\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    console.log(delay);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","btn","addEventListener","e","preventDefault","delay1","currentTarget","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6d4a4df0.js.map"}