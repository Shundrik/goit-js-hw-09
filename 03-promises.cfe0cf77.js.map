{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,WAG9BH,EAAKC,KAAKI,iBAAiB,SAO3B,SAAuBC,GACvBC,EAASD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,MAEjC,IAAMC,EAAQX,EAAKC,KAAKW,SAASD,MAAMD,MACjCG,EAAOb,EAAKC,KAAKW,SAASC,KAAKH,MAC/BI,EAASd,EAAKC,KAAKW,SAASE,OAAOJ,MACzCK,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,MAddd,EAAKI,IAAIC,iBAAiB,SAAUY,GACpC,IAAIV,EAAW,GAkBf,SAASU,EAAcC,EAAUP,GAC9BI,QAAQC,IAAI,SAAyBG,OAAhBD,EAAS,SAAaC,OAANR,IACtC,IAAMS,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,SAAQ,SAACC,EAASC,OAItBC,YAAW,WAELN,GACLO,QAAQ,CAAEC,SAAArB,MAMRI,GAKLM,EAAc,EAAG,MAChBY,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUP,EAAKmB,EAALnB,MACjBI,QAAQC,IAAI,SAAyBG,OAAhBD,EAAS,SAAaC,OAANR,IACrCI,QAAQC,IAAI,uBAAwCG,OAAfD,EAAS,QAAYC,OAANR,EAAM,OAC1DoB,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCd,OAAfD,EAAS,QAAYC,OAANR,EAAM,UAEvEuB,OAAM,SAAAJ,G,IAAGZ,EAAQY,EAARZ,SAAUP,EAAKmB,EAALnB,MAClBI,QAAQC,IAAI,sBAAuCG,OAAfD,EAAS,QAAYC,OAANR,EAAM,OACzDoB,EAAAjC,GAASkC,OAAOG,QAAQ,sBAAqChB,OAAfD,EAAS,QAAYC,OAANR,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('input', valueFromForm);\nrefs.btn.addEventListener('submit', createPromise);\nlet dataForm = {};\n// const delay = document.querySelector(`[name=\"delay\"] `);\n// const step = refs.form.elements.step.value;\n// const amount = refs.form.elements.amount.value;\n\nfunction valueFromForm(e) {\ndataForm[e.target.name] = e.target.value;\n\n  const delay = refs.form.elements.delay.value;\n  const step = refs.form.elements.step.value;\n  const amount = refs.form.elements.amount.value;\n  console.log(delay);\n  console.log(step);\n  console.log(amount);\n }\n\n\n\nfunction createPromise(position, delay) {\n   console.log(`start ${position} and ${delay}`);\n  const shouldResolve = Math.random() > 0.3;\n  new Promise((resolve, reject) => {\n    \n  })\n\n  setTimeout(()=>{\n\n    if (shouldResolve) {\n   Resolve({ dataForm });\n    \n   \n  } else {\n    // Reject\n  }\n  }, delay)\n\n  \n}\n\ncreatePromise(2, 1500)\n.then(({ position, delay }) => {\n  console.log(`start ${position} and ${delay}`);\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n})\n.catch(({ position, delay }) => {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btn","addEventListener","e","$ce04d3a99e08e73b$var$dataForm","target","name","value","delay","elements","step","amount","console","log","$ce04d3a99e08e73b$var$createPromise","position","concat","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Resolve","dataForm","then","param","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.cfe0cf77.js.map"}