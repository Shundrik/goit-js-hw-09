{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,WAG9BH,EAAKC,KAAKI,iBAAiB,SAU3B,SAAuBC,GAIrBC,GAAcP,EAAKC,KAAKO,SAASC,MAAMC,MACvCC,GAAaX,EAAKC,KAAKO,SAASI,KAAKF,MACrCG,GAAUb,EAAKC,KAAKO,SAASM,OAAOJ,MAEpCK,QAAQC,IAAIT,MAjBdP,EAAKI,IAAIC,iBAAiB,UAuB1B,SAAuBY,EAAUC,GAOjC,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAAG,CACpC,IAAKC,EAAQb,EACZQ,QAAQC,IAAII,GACZ,IAAIC,EAAW,EACL,IAAIC,SAAQ,CAACC,EAASC,KAC9BC,YAAW,KACTJ,GAAYF,EAEZJ,QAAQC,IAAI,SAASK,SAAgBD,KACfM,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAP,EAAUZ,MAAAW,IAEpBI,EAAO,CAAEI,SAAAP,EAAUZ,MAAAW,MAEpBb,GACHA,GAAcK,QAGdiB,MAAK,EAACD,SAAEA,EAAQnB,MAAEA,MAClBM,QAAQC,IAAI,SAASY,SAAgBnB,KACrCM,QAAQC,IAAI,uBAAqBY,QAAiBnB,OAClDqB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBJ,QAAiBnB,UAC7DwB,OAAM,EAACL,SAAEA,EAAQnB,MAAEA,MACpBM,QAAQC,IAAI,sBAAoBY,QAAiBnB,OACjDqB,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBN,QAAenB,cArD/D,IAAIF,EAAa,EACbI,EAAY,EACZE,EAAS,EAebE,QAAQC,IAAIT,GACZQ,QAAQC,IAAIL,GACZI,QAAQC,IAAIH","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('input', valueFromForm);\nrefs.btn.addEventListener('submit', createPromise);\n\nlet firstDelay = 0;\nlet stepDelay = 0;\nlet amount = 0;\n\n\n// let dataForm = {};\n\nfunction valueFromForm(e) {\n  \n  // dataForm[e.target.name] = e.target.value;\n// console.log(\"change\");\n  firstDelay = +refs.form.elements.delay.value;\n  stepDelay = +refs.form.elements.step.value;\n  amount = +refs.form.elements.amount.value;\n\n  console.log(firstDelay);\n}\nconsole.log(firstDelay);\nconsole.log(stepDelay);\nconsole.log(amount);\n\nfunction createPromise(position, delay) {\n\n// let firstDelay = 1000;\n// let step = 500;\n// let amount = 5;\n\n// function createPromise(position, delay) {\nfor (let i = 1; i <= amount; i += 1) {\n let  delay = firstDelay;\n  console.log(delay);\n  let position = 0;\n  const p = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      position += i;\n      // console.log(delay);\n      console.log(`start ${position} and ${delay}`);\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, firstDelay);\n    firstDelay += step;\n  });\n\n  p.then(({ position, delay }) => {\n    console.log(`start ${position} and ${delay}`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","btn","addEventListener","e","$47d4ff9957288465$var$firstDelay","elements","delay","value","$47d4ff9957288465$var$stepDelay","step","$47d4ff9957288465$var$amount","amount","console","log","position2","delay2","i","delay1","position1","Promise","resolve","reject","setTimeout","Math","random","position","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.4b3391b6.js.map"}